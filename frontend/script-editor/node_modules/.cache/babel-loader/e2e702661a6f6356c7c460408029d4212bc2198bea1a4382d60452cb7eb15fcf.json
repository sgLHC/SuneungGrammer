{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0730b\\\\Documents\\\\Dev\\\\Projects\\\\Sogang-LHC\\\\script_editor\\\\frontend\\\\script-editor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"react-chatbot-kit/build/main.css\";\nimport config from \"./config\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport Login from \"./components/Login\"; // Login 컴포넌트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 로그인 상태 관리\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"access_token\"));\n\n  // 로그인 성공 시 호출할 함수\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // 로그인 상태를 true로 설정\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chatbot\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Chatbot, {\n            config: config,\n            messageParser: MessageParser,\n            actionProvider: ActionProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xe3oGaPXbVf9uBN74hVyNVJCfUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Chatbot","config","MessageParser","ActionProvider","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","localStorage","getItem","handleLoginSuccess","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","style","display","justifyContent","marginTop","messageParser","actionProvider","_c","$RefreshReg$"],"sources":["C:/Users/0730b/Documents/Dev/Projects/Sogang-LHC/script_editor/frontend/script-editor/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"react-chatbot-kit/build/main.css\";\nimport config from \"./config\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport Login from \"./components/Login\";  // Login 컴포넌트 추가\n\nfunction App() {\n  // 로그인 상태 관리\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"access_token\"));\n\n  // 로그인 성공 시 호출할 함수\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);  // 로그인 상태를 true로 설정\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* 로그인 상태에 따라 로그인 또는 챗봇 페이지로 이동 */}\n        <Route\n          path=\"/login\"\n          element={isLoggedIn ? <Navigate to=\"/chatbot\" /> : <Login onLoginSuccess={handleLoginSuccess} />}\n        />\n        <Route\n          path=\"/chatbot\"\n          element={\n            isLoggedIn ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\n                <Chatbot config={config} messageParser={MessageParser} actionProvider={ActionProvider} />\n              </div>\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        {/* 기본 경로는 로그인 페이지로 이동 */}\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,kCAAkC;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAACiB,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;;EAEpF;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;EACxB,CAAC;EAED,oBACEJ,OAAA,CAACV,MAAM;IAAAkB,QAAA,eACLR,OAAA,CAACT,MAAM;MAAAiB,QAAA,gBAELR,OAAA,CAACR,KAAK;QACJiB,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEP,UAAU,gBAAGH,OAAA,CAACP,QAAQ;UAACkB,EAAE,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGf,OAAA,CAACF,KAAK;UAACkB,cAAc,EAAET;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClG,CAAC,eACFf,OAAA,CAACR,KAAK;QACJiB,IAAI,EAAC,UAAU;QACfC,OAAO,EACLP,UAAU,gBACRH,OAAA;UAAKiB,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAZ,QAAA,eAC3ER,OAAA,CAACN,OAAO;YAACC,MAAM,EAAEA,MAAO;YAAC0B,aAAa,EAAEzB,aAAc;YAAC0B,cAAc,EAAEzB;UAAe;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,gBAENf,OAAA,CAACP,QAAQ;UAACkB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAE1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEFf,OAAA,CAACR,KAAK;QAACiB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEV,OAAA,CAACP,QAAQ;UAACkB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACb,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}